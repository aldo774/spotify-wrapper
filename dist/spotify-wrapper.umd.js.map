{"version":3,"sources":["webpack://spotifyWrapper/webpack/universalModuleDefinition","webpack://spotifyWrapper/webpack/bootstrap","webpack://spotifyWrapper/./node_modules/node-fetch/browser.js","webpack://spotifyWrapper/./src/utils.js","webpack://spotifyWrapper/./src/config.js","webpack://spotifyWrapper/(webpack)/buildin/global.js","webpack://spotifyWrapper/./src/album.js","webpack://spotifyWrapper/./src/search.js","webpack://spotifyWrapper/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","fetch","Headers","Request","Response","toJson","data","json","API_URL","HEADERS","headers","Authorization","g","this","Function","eval","e","_config","_utils","global","getAlbum","id","then","getAlbums","ids","getAlbumTracks","search","query","type","searchArtists","artists","searchAlbums","albums","searchTracks","tracks","searchPlaylists","playlists","_search","_album"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,eAAAD,IAEAD,EAAA,eAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA2CA,OAtCAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACAkB,OAAAC,eAAAnB,EAAA,cAAiDwB,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAxB,GACA,IAAAe,EAAAf,KAAAyB,WACA,WAA2B,OAAAzB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,GAIAzB,IAAA0B,EAAA,mBCnEA/B,EAAAD,UAAAI,OAAA6B,MACAjC,EAAAkC,QAAA9B,OAAA8B,QACAlC,EAAAmC,QAAA/B,OAAA+B,QACAnC,EAAAoC,SAAAhC,OAAAgC,uCCHAnC,EAAOD,SACLqC,OAAQ,SAAAC,GAAA,OAAQA,EAAKC,wFCDVC,UAAU,6BAOVC,WACXC,SACEC,uLCTJ,IAAAC,EAGAA,EAAA,WACA,OAAAC,KADA,GAIA,IAEAD,KAAAE,SAAA,cAAAA,KAAA,EAAAC,MAAA,QACC,MAAAC,GAED,iBAAA5C,SAAAwC,EAAAxC,QAOAH,EAAAD,QAAA4C,6ICnBA,IAAAK,EAAA3C,EAAA,GACA4C,EAAA5C,EAAA,GAEA6C,EAAOlB,MAAQ3B,EAAQ,GAEV8C,WAAW,SAAAC,GAAA,OACtBF,EAAOlB,MAAPgB,EAAAT,QAAA,WAAkCa,EAAlCJ,EAAAR,SAAiDa,KAAjDJ,EAAAb,SAEWkB,YAAY,SAAAC,GAAA,OACvBL,EAAOlB,MAAPgB,EAAAT,QAAA,eAAsCgB,EAAtCP,EAAAR,SAAsDa,KAAtDJ,EAAAb,SAEWoB,iBAAiB,SAAAJ,GAAA,OAC5BF,EAAOlB,MAAPgB,EAAAT,QAAA,WAAkCa,EAAlC,UAAAJ,EAAAR,SAAwDa,KAAxDJ,EAAAb,uMCZF,IAAAY,EAAA3C,EAAA,GACA4C,EAAA5C,EAAA,GAEA6C,EAAOlB,MAAQ3B,EAAQ,GAEhB,IAAMoD,WAAS,SAACC,EAAOC,GAAR,OACpBT,EAAOlB,MAAPgB,EAAAT,QAAA,aAAoCmB,EAApC,SAAkDC,EAAlDX,EAAAR,SAAmEa,KAAnEJ,EAAAb,SAEWwB,gBAAgB,SAAAC,GAAA,OAAWJ,EAAOI,EAAS,WAE3CC,eAAe,SAAAC,GAAA,OAAUN,EAAOM,EAAQ,UAExCC,eAAe,SAAAC,GAAA,OAAUR,EAAOQ,EAAQ,UAExCC,kBAAkB,SAAAC,GAAA,OAAaV,EAAOU,EAAW,6DCd9D,IAAAC,EAAA/D,EAAA,GAQAgE,EAAAhE,EAAA,GAMAL,EAAOD,SACL0D,gBACAK,4BACAF,8BACAM,kCACAF,4BACAb,oBACAG,sBACAE","file":"spotify-wrapper.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"spotifyWrapper\"] = factory();\n\telse\n\t\troot[\"spotifyWrapper\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = exports = window.fetch;\nexports.Headers = window.Headers;\nexports.Request = window.Request;\nexports.Response = window.Response;\n","module.exports = {\r\n  toJson: data => data.json(),\r\n};\r\n","export const API_URL = 'https://api.spotify.com/v1';\n\nconst TOKEN_API = 'BQDRUKfbRXlGBqFO5XHI_a99PMkCi5yDSeVJ' +\n                  'N-S6VSHoflnOGUs9054q5Pb8yZu1nslgFayt' +\n                  'IHyE8TWP_JP48b5_MFHBCJ9aVwStSUeCK641' +\n                  'n5-e6AAqBaChUKThNUJ-z7bUl545sr5y';\n\nexport const HEADERS = {\n  headers: {\n    Authorization: `\"Bearer ${TOKEN_API}\"`,\n  },\n};\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import { API_URL, HEADERS } from './config';\r\nimport { toJson } from './utils';\r\n\r\nglobal.fetch = require('node-fetch');\r\n\r\nexport const getAlbum = id =>\r\n  global.fetch(`${API_URL}/albums/${id}`, HEADERS).then(toJson);\r\n\r\nexport const getAlbums = ids =>\r\n  global.fetch(`${API_URL}/albums/ids=${ids}`, HEADERS).then(toJson);\r\n\r\nexport const getAlbumTracks = id =>\r\n  global.fetch(`${API_URL}/albums/${id}/tracks`, HEADERS).then(toJson);\r\n","import { API_URL, HEADERS } from './config';\r\nimport { toJson } from './utils';\r\n\r\nglobal.fetch = require('node-fetch');\r\n\r\nexport const search = (query, type) =>\r\n  global.fetch(`${API_URL}/search?q=${query}&type=${type}`, HEADERS).then(toJson);\r\n\r\nexport const searchArtists = artists => search(artists, 'artist');\r\n\r\nexport const searchAlbums = albums => search(albums, 'album');\r\n\r\nexport const searchTracks = tracks => search(tracks, 'track');\r\n\r\nexport const searchPlaylists = playlists => search(playlists, 'playlist');\r\n","import {\r\n  search,\r\n  searchAlbums,\r\n  searchArtists,\r\n  searchPlaylists,\r\n  searchTracks,\r\n} from './search';\r\n\r\nimport {\r\n  getAlbum,\r\n  getAlbums,\r\n  getAlbumTracks,\r\n} from './album';\r\n\r\nmodule.exports = {\r\n  search,\r\n  searchAlbums,\r\n  searchArtists,\r\n  searchPlaylists,\r\n  searchTracks,\r\n  getAlbum,\r\n  getAlbums,\r\n  getAlbumTracks,\r\n};\r\n"],"sourceRoot":""}